// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$icon-brush-name: 'icon_brush'
$icon-brush-x: 103px
$icon-brush-y: 0px
$icon-brush-offset-x: -103px
$icon-brush-offset-y: 0px
$icon-brush-width: 50px
$icon-brush-height: 42px
$icon-brush-total-width: 153px
$icon-brush-total-height: 150px
$icon-brush-image: 'sprite_main.png'
$icon-brush: (103px, 0px, -103px, 0px, 50px, 42px, 153px, 150px, 'sprite_main.png', 'icon_brush', )
$icon-circle-name: 'icon_circle'
$icon-circle-x: 0px
$icon-circle-y: 0px
$icon-circle-offset-x: 0px
$icon-circle-offset-y: 0px
$icon-circle-width: 50px
$icon-circle-height: 50px
$icon-circle-total-width: 153px
$icon-circle-total-height: 150px
$icon-circle-image: 'sprite_main.png'
$icon-circle: (0px, 0px, 0px, 0px, 50px, 50px, 153px, 150px, 'sprite_main.png', 'icon_circle', )
$icon-gamepad-name: 'icon_gamepad'
$icon-gamepad-x: 103px
$icon-gamepad-y: 44px
$icon-gamepad-offset-x: -103px
$icon-gamepad-offset-y: -44px
$icon-gamepad-width: 41px
$icon-gamepad-height: 50px
$icon-gamepad-total-width: 153px
$icon-gamepad-total-height: 150px
$icon-gamepad-image: 'sprite_main.png'
$icon-gamepad: (103px, 44px, -103px, -44px, 41px, 50px, 153px, 150px, 'sprite_main.png', 'icon_gamepad', )
$icon-heart-name: 'icon_heart'
$icon-heart-x: 0px
$icon-heart-y: 52px
$icon-heart-offset-x: 0px
$icon-heart-offset-y: -52px
$icon-heart-width: 50px
$icon-heart-height: 46px
$icon-heart-total-width: 153px
$icon-heart-total-height: 150px
$icon-heart-image: 'sprite_main.png'
$icon-heart: (0px, 52px, 0px, -52px, 50px, 46px, 153px, 150px, 'sprite_main.png', 'icon_heart', )
$icon-mobile-name: 'icon_mobile'
$icon-mobile-x: 0px
$icon-mobile-y: 100px
$icon-mobile-offset-x: 0px
$icon-mobile-offset-y: -100px
$icon-mobile-width: 28px
$icon-mobile-height: 50px
$icon-mobile-total-width: 153px
$icon-mobile-total-height: 150px
$icon-mobile-image: 'sprite_main.png'
$icon-mobile: (0px, 100px, 0px, -100px, 28px, 50px, 153px, 150px, 'sprite_main.png', 'icon_mobile', )
$icon-tv-name: 'icon_tv'
$icon-tv-x: 52px
$icon-tv-y: 0px
$icon-tv-offset-x: -52px
$icon-tv-offset-y: 0px
$icon-tv-width: 49px
$icon-tv-height: 50px
$icon-tv-total-width: 153px
$icon-tv-total-height: 150px
$icon-tv-image: 'sprite_main.png'
$icon-tv: (52px, 0px, -52px, 0px, 49px, 50px, 153px, 150px, 'sprite_main.png', 'icon_tv', )
$spritesheet-width: 153px
$spritesheet-height: 150px
$spritesheet-image: 'sprite_main.png'
$spritesheet-sprites: ($icon-brush, $icon-circle, $icon-gamepad, $icon-heart, $icon-mobile, $icon-tv, )
$spritesheet: (153px, 150px, 'sprite_main.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
